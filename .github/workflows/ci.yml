---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - release
  schedule:
    - cron: '0 1 * * *'
jobs:
  ci:
    strategy:
      matrix:
        node:
          - '12.x'
          - '14.x'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-npm-
      -
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: install npm 7
        run: npm i -g npm@7
      - name: install
        run: npm ci
      - name: test
        run: npm run test:ci
      - name: save coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.node }}
          path: ./coverage
      - name: build
        run: npm run build
      - name: generate docs
        run: npm run docs
        if: matrix.node == '14.x' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release')
      - name: save docs
        if: matrix.node == '14.x' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release')
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./docs
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: lint
        uses: reviewdog/action-eslint@v1
  coverage:
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - '12.x'
          - '14.x'
    steps:
      - uses: actions/checkout@v2
      -
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: coverage-${{ matrix.node }}
          path: ./coverage
      - name: upload coverage
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  docs:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    steps:
      - name: download docs artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
          path: ./docs
      - name: publish docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: ./docs
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
  release:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-14.x-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-14.x-npm-
      -
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: install npm 7
        run: npm i -g npm@7
      - name: install
        run: npm ci
      - name: build
        run: npm run build
      - name: release
        run: npm run semantic-release -- --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}
  create-release-pull-request:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: release
      - run: |
          git fetch origin main:main
          git reset --hard main
      - name: create release pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ github.token }}
          title: Next stable release candidate
          base: release
